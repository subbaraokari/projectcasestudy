package org.simplilearn.controllers;

import java.time.LocalDateTime;
import java.util.List;

import org.simplilearn.entities.Emp;
import org.simplilearn.exceptions.EmployeeNotFoundException;
import org.simplilearn.model.ErrorResponse;
import org.simplilearn.services.EmployeeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@ResponseBody
@RequestMapping("/employeeapi")
public class EmployeeController {
	@Autowired
	private EmployeeService employeeService;
	@PostMapping("/employees")
	public ResponseEntity<?> insertEmployee(@RequestBody Emp e)
	{
		employeeService.insertEmployee(e);
		return new ResponseEntity<String>("Inserted Successfully", HttpStatus.CREATED);
	}
	@DeleteMapping("/employees/delete/{eno}")
	public ResponseEntity<?> deleteEmployee(@PathVariable("eno") int eno){
		employeeService.deleteEmployee(eno);
		return new ResponseEntity<String>("deleted Successfully", HttpStatus.OK);
	}
	@GetMapping("/employees")
	public ResponseEntity<List<Emp>> getEmployees()
	{
		List<Emp> employees=employeeService.getEmployees();
		return new ResponseEntity<List<Emp>>(employees, HttpStatus.OK);
	}
	@GetMapping("/employees/{eno}")
	public ResponseEntity<Emp> getEmployee(@PathVariable("eno") int eno) throws EmployeeNotFoundException
	{
		Emp e=employeeService.getEmployee(eno);
		return new ResponseEntity<Emp>(e,HttpStatus.OK);
	}
	@PutMapping("/employees/update/{eno}")
	public ResponseEntity<?> updateEmployee(@PathVariable("eno") int eno,@RequestBody Emp e) throws EmployeeNotFoundException{
		employeeService.updateEmployee(eno, e);
		return new ResponseEntity<String>("Updated Successfully", HttpStatus.OK);
	}
	@ExceptionHandler(EmployeeNotFoundException.class)
	public ResponseEntity<ErrorResponse> exceptionHandler(EmployeeNotFoundException e)
	{
		ErrorResponse errorResponse=new ErrorResponse();
		errorResponse.setStatusCode(HttpStatus.NO_CONTENT.value());
		errorResponse.setErrorMessage(e.getMessage());
		errorResponse.setTimeStamp(LocalDateTime.now());
		return new ResponseEntity<ErrorResponse>(errorResponse, HttpStatus.OK);
	}
	
}
